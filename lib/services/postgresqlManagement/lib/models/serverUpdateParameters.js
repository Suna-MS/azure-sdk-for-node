/*
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the ServerUpdateParameters class.
 * @constructor
 * Represents server update parameters.
 *
 * @member {object} [sku] Represents the sku of the PostgreSQL server.
 * 
 * @member {string} [sku.name] The name of the sku, typically, a letter +
 * Number code, e.g. P3.
 * 
 * @member {string} [sku.tier] The tier of the particular SKU, e.g. Basic.
 * Possible values include: 'Basic'
 * 
 * @member {number} [sku.capacity] The scale up/out capacity, representing
 * server's DTU allocation.
 * 
 * @member {string} [sku.size] The size code, to be interpreted by resource as
 * appropriate.
 * 
 * @member {string} [sku.family] The family of hardware.
 * 
 * @member {number} [storageMB] The max storage allowed for a PostgreSQL
 * server.
 * 
 * @member {string} [administratorLoginPassword] The password of the
 * administrator login.
 * 
 * @member {string} [version] The version of a PostgreSQL server. Possible
 * values include: '9.5'
 * 
 * @member {object} [tags] Application-specific metadata in the form of
 * key-value pairs.
 * 
 */
function ServerUpdateParameters() {
}

/**
 * Defines the metadata of ServerUpdateParameters
 *
 * @returns {object} metadata of ServerUpdateParameters
 *
 */
ServerUpdateParameters.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ServerUpdateParameters',
    type: {
      name: 'Composite',
      className: 'ServerUpdateParameters',
      modelProperties: {
        sku: {
          required: false,
          serializedName: 'sku',
          type: {
            name: 'Composite',
            className: 'Sku'
          }
        },
        storageMB: {
          required: false,
          serializedName: 'properties.storageMB',
          constraints: {
            InclusiveMinimum: 1024
          },
          type: {
            name: 'Number'
          }
        },
        administratorLoginPassword: {
          required: false,
          serializedName: 'properties.administratorLoginPassword',
          type: {
            name: 'String'
          }
        },
        version: {
          required: false,
          serializedName: 'properties.version',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = ServerUpdateParameters;
