/*
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the FirewallRule class.
 * @constructor
 * Represents a PostgreSQL server firewall rule.
 *
 * @member {string} startIpAddress The start IP address of the PostgreSQL
 * server firewall rule. Must be IPv4 format.
 * 
 * @member {string} endIpAddress The end IP address of the PostgreSQL server
 * firewall rule. Must be IPv4 format.
 * 
 */
function FirewallRule() {
  FirewallRule['super_'].call(this);
}

util.inherits(FirewallRule, models['SubResource']);

/**
 * Defines the metadata of FirewallRule
 *
 * @returns {object} metadata of FirewallRule
 *
 */
FirewallRule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'FirewallRule',
    type: {
      name: 'Composite',
      className: 'FirewallRule',
      modelProperties: {
        id: {
          required: false,
          readOnly: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          readOnly: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        startIpAddress: {
          required: true,
          serializedName: 'properties.startIpAddress',
          constraints: {
            Pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
          },
          type: {
            name: 'String'
          }
        },
        endIpAddress: {
          required: true,
          serializedName: 'properties.endIpAddress',
          constraints: {
            Pattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$'
          },
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = FirewallRule;
