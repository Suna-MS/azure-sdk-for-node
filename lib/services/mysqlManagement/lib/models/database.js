/*
 * Copyright (c) Microsoft and contributors.  All rights reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the Database class.
 * @constructor
 * Represents a MySQL Database.
 *
 * @member {string} [charset] The charset of MySQL database.
 * 
 * @member {string} [collation] The collation of MySQL database.
 * 
 */
function Database() {
  Database['super_'].call(this);
}

util.inherits(Database, models['SubResource']);

/**
 * Defines the metadata of Database
 *
 * @returns {object} metadata of Database
 *
 */
Database.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Database',
    type: {
      name: 'Composite',
      className: 'Database',
      modelProperties: {
        id: {
          required: false,
          readOnly: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          readOnly: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        charset: {
          required: false,
          serializedName: 'properties.charset',
          type: {
            name: 'String'
          }
        },
        collation: {
          required: false,
          serializedName: 'properties.collation',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = Database;
